module and(left, right) -> result {
    torch torch_l;
    torch torch_r;

    torch_l = left;
    torch_r = right;

    torch torch_c;
    torch_c = torch_l;
    torch_c = torch_r;

    result = torch_c;
}

module xor(left, right) -> result {
        torch torch_l;
        torch torch_r;
        dust nand_inputs;

        torch_l = left;
        torch_r = right;

        nand_inputs = torch_l;
        nand_inputs = torch_r;

        torch torch_bottom_l;
        torch torch_bottom_r;

        torch_bottom_l = left;
        torch_bottom_r = right;

        torch center;

        center = nand_inputs;
        center = torch_bottom_l;
        center = torch_bottom_r;
        
        dust dust_l;
        dust dust_r;
        
        dust_l = center;
        dust_l = torch_bottom_l;

        dust_r = center;
        dust_r = torch_bottom_r;

        torch torch_final_l;
        torch torch_final_r;

        torch_final_l = dust_l;
        torch_final_r = dust_r;

        result = torch_final_l;
        result = torch_final_r;
}

module half_adder(left, right) -> bit, carry {
        xor x(left, right);
        and a(left, right);
        
        bit = x.result;
        carry = a.result;
}

module full_adder(l0, r0, c) -> o0, carry {
        half_adder h1(l0, r0);
        half_adder h2(h1.bit, c);

        dust d;

        d = h1.carry;
        d = h2.carry;

        o0 = h2.bit;
        carry = d;
}

module four_bit_adder(l0, l1, l2, l3, r0, r1, r2, r3) -> o0, o1, o2, o3, carry {
        half_adder h0(l0, r0);
        full_adder f1(l1, r1, h0.carry);
        full_adder f2(l2, r2, f1.carry);
        full_adder f3(l3, r3, f2.carry);

        o0 = h0.bit;
        o1 = f1.o0;
        o2 = f2.o0;
        o3 = f3.o0;
        carry = f3.carry;
}

# Test that 15 + 13 = 28

$expect(0, four_bit_adder(1, 1, 1, 1, 1, 0, 1, 1).o0,    0);
$expect(0, four_bit_adder(1, 1, 1, 1, 1, 0, 1, 1).o1,    0);
$expect(0, four_bit_adder(1, 1, 1, 1, 1, 0, 1, 1).o2,    1);
$expect(0, four_bit_adder(1, 1, 1, 1, 1, 0, 1, 1).o3,    1);
$expect(0, four_bit_adder(1, 1, 1, 1, 1, 0, 1, 1).carry, 1);

